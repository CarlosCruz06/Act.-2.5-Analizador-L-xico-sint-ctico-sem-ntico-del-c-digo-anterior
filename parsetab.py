
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN DO ENDDO ENDWHILE ID INT LPAREN MUL NUM PLUS RPAREN SEMI WHILEprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : declaration\n                 | assignment\n                 | loopdeclaration : INT ID ASSIGN NUM SEMIassignment : ID ASSIGN expression SEMIexpression : term\n                  | expression PLUS termterm : factor\n            | term MUL factorfactor : NUM\n              | IDloop : DO statement_list ENDDO WHILE LPAREN condition RPAREN ENDWHILEcondition : ID ASSIGN NUM'
    
_lr_action_items = {'INT':([0,2,3,4,5,6,9,10,13,22,26,34,],[7,7,-3,-4,-5,-6,7,-2,7,-8,-7,-15,]),'ID':([0,2,3,4,5,6,7,9,10,12,13,22,23,24,26,29,34,],[8,8,-3,-4,-5,-6,11,8,-2,15,8,-8,15,15,-7,31,-15,]),'DO':([0,2,3,4,5,6,9,10,13,22,26,34,],[9,9,-3,-4,-5,-6,9,-2,9,-8,-7,-15,]),'$end':([1,2,3,4,5,6,10,22,26,34,],[0,-1,-3,-4,-5,-6,-2,-8,-7,-15,]),'ENDDO':([3,4,5,6,10,13,22,26,34,],[-3,-4,-5,-6,-2,20,-8,-7,-15,]),'ASSIGN':([8,11,31,],[12,14,33,]),'NUM':([12,14,23,24,33,],[19,21,19,19,35,]),'MUL':([15,17,18,19,27,28,],[-14,24,-11,-13,24,-12,]),'SEMI':([15,16,17,18,19,21,27,28,],[-14,22,-9,-11,-13,26,-10,-12,]),'PLUS':([15,16,17,18,19,27,28,],[-14,23,-9,-11,-13,-10,-12,]),'WHILE':([20,],[25,]),'LPAREN':([25,],[29,]),'RPAREN':([30,35,],[32,-16,]),'ENDWHILE':([32,],[34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,9,],[2,13,]),'statement':([0,2,9,13,],[3,10,3,10,]),'declaration':([0,2,9,13,],[4,4,4,4,]),'assignment':([0,2,9,13,],[5,5,5,5,]),'loop':([0,2,9,13,],[6,6,6,6,]),'expression':([12,],[16,]),'term':([12,23,],[17,27,]),'factor':([12,23,24,],[18,18,28,]),'condition':([29,],[30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',5),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',9),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',10),
  ('statement -> declaration','statement',1,'p_statement','parser.py',17),
  ('statement -> assignment','statement',1,'p_statement','parser.py',18),
  ('statement -> loop','statement',1,'p_statement','parser.py',19),
  ('declaration -> INT ID ASSIGN NUM SEMI','declaration',5,'p_declaration','parser.py',23),
  ('assignment -> ID ASSIGN expression SEMI','assignment',4,'p_assignment','parser.py',27),
  ('expression -> term','expression',1,'p_expression','parser.py',31),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',32),
  ('term -> factor','term',1,'p_term','parser.py',39),
  ('term -> term MUL factor','term',3,'p_term','parser.py',40),
  ('factor -> NUM','factor',1,'p_factor','parser.py',47),
  ('factor -> ID','factor',1,'p_factor','parser.py',48),
  ('loop -> DO statement_list ENDDO WHILE LPAREN condition RPAREN ENDWHILE','loop',8,'p_loop','parser.py',52),
  ('condition -> ID ASSIGN NUM','condition',3,'p_condition','parser.py',56),
]
